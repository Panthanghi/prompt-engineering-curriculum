# 30-Day Prompt Engineering Course
*A comprehensive curriculum for becoming a professional prompt engineer*

## Directory Structure
```
prompt-engineering-curriculum/
├── .github/
│   └── ISSUE_TEMPLATE/
│       ├── bug_report.md
│       └── feature_request.md
├── curriculum/
│   ├── week-1/
│   │   ├── day-1/
│   │   │   ├── README.md
│   │   │   ├── exercises.md
│   │   │   └── solutions.md
│   │   └── ...
│   └── ...
├── projects/
│   ├── project-1/
│   │   ├── README.md
│   │   └── template.md
│   └── ...
├── resources/
│   ├── cheatsheets/
│   ├── templates/
│   └── tools/
├── .gitignore
├── CONTRIBUTING.md
├── LICENSE
└── README.md
```

## Essential Files

### `.gitignore`
```
# Python
__pycache__/
*.py[cod]
*$py.class
.env
.venv
env/
venv/
ENV/

# IDEs
.idea/
.vscode/
*.swp
*.swo

# OS
.DS_Store
Thumbs.db

# Jupyter
.ipynb_checkpoints
```

### `README.md`
```markdown
# 30-Day Prompt Engineering Curriculum

## 🎯 Course Overview

Transform from beginner to professional prompt engineer in 30 days with 1 hour per day of focused learning.

### Learning Outcomes
- Master prompt engineering fundamentals
- Build a professional portfolio
- Develop production-ready skills
- Prepare for industry roles

## 🚀 Getting Started

### Prerequisites
- GitHub account
- Basic Python knowledge
- Free accounts:
  - [Anthropic Claude](https://claude.ai)
  - [OpenAI](https://platform.openai.com)
  - [Hugging Face](https://huggingface.co)

### Setup Instructions
1. Fork this repository
2. Follow daily curriculum
3. Complete projects
4. Build portfolio

## 📚 Curriculum Structure

### Week 1: Foundations
- Day 1-2: LLM Basics
- Day 3-5: Prompt Fundamentals
- Day 6-7: Pattern Recognition

### Week 2: Advanced Techniques
- Day 8-10: Chain of Thought
- Day 11-14: Few-shot Learning

### Week 3: Specialization
- Day 15-21: Domain-specific Applications
- Projects and Practice

### Week 4: Production & Career
- Day 22-28: Production Systems
- Day 29-30: Career Preparation

## 💼 Projects
1. Prompt Pattern Library
2. Content Generation System
3. Analysis Pipeline
4. Production Application

## 🛠 Resources
- [Documentation](./resources/documentation)
- [Templates](./resources/templates)
- [Tools](./resources/tools)

## 🤝 Contributing
See [CONTRIBUTING.md](CONTRIBUTING.md) for guidelines.

## 📝 License
MIT License - see [LICENSE](LICENSE)
```

### `CONTRIBUTING.md`
```markdown
# Contributing Guidelines

## How to Contribute
1. Fork repository
2. Create feature branch
3. Commit changes
4. Submit pull request

## Code of Conduct
- Be respectful
- Follow guidelines
- Document changes
- Test thoroughly

## Pull Request Process
1. Update documentation
2. Add tests if needed
3. Follow conventions
4. Request review
```

### `LICENSE`
```
MIT License

Copyright (c) 2024 [Your Name]

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

[Rest of MIT License text...]
```

### `curriculum/week-1/day-1/README.md`
```markdown
# Day 1: Introduction to Prompt Engineering

## 🎯 Learning Objectives
- Understand LLM fundamentals
- Master basic prompting
- Create effective prompts

## ⏰ Schedule (1 hour)

### Theory (20 mins)
- Introduction to LLMs
- Basic prompt structure
- Response patterns

### Practice (30 mins)
1. Create basic prompts
2. Test variations
3. Document results

### Review (10 mins)
- Check solutions
- Record learnings
- Plan next day

## 📚 Resources
- [LLM Basics](link)
- [Prompt Guide](link)
- [Examples](link)

## ✍️ Exercises
1. Basic Classification
2. Text Generation
3. Analysis Tasks

## 📝 Progress Tracking
- [ ] Theory completed
- [ ] Exercises done
- [ ] Documentation updated
```

### `projects/project-1/README.md`
```markdown
# Project 1: Prompt Pattern Library

## 🎯 Objective
Create reusable prompt patterns

## 📋 Requirements
- 10+ patterns
- Documentation
- Examples
- Tests

## 📁 Structure
```
patterns/
├── classification/
├── generation/
└── analysis/
```

## 🚀 Implementation
1. Design patterns
2. Create examples
3. Test thoroughly
4. Document usage

## ✅ Deliverables
- Pattern library
- Documentation
- Test suite
- Usage guide
```

### `.github/ISSUE_TEMPLATE/bug_report.md`
```markdown
---
name: Bug Report
about: Create a bug report
title: '[BUG] '
labels: bug
assignees: ''
---

**Description**
[Bug description]

**To Reproduce**
1. Step 1
2. Step 2
3. Error occurs

**Expected Behavior**
[What should happen]

**Additional Context**
[Any other information]
```

### `.github/ISSUE_TEMPLATE/feature_request.md`
```markdown
---
name: Feature Request
about: Suggest an idea
title: '[FEATURE] '
labels: enhancement
assignees: ''
---

**Description**
[Feature description]

**Solution**
[Proposed solution]

**Alternatives**
[Alternative solutions]

**Additional Context**
[Any other information]
```

To use this repository:

1. Create a new repository on GitHub
2. Clone it locally
3. Copy these files into the repository
4. Push to GitHub

Commands:
```bash
# Create and clone repository
git clone https://github.com/yourusername/prompt-engineering-curriculum.git
cd prompt-engineering-curriculum

# Copy files into repository
# Add files to git
git add .

# Commit
git commit -m "Initial repository setup"

# Push
git push origin main
```
